[ccpp-arg-table]
  name = GFS_phys_time_vary_init
  type = scheme
[ntoz]
  standard_name = index_for_ozone
  long_name = tracer index for ozone mixing ratio
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[me]
  standard_name = mpi_rank
  long_name = current MPI-rank
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[master]
  standard_name = mpi_root
  long_name = master MPI-rank
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[h2o_phys]
  standard_name = flag_for_stratospheric_water_vapor_physics
  long_name = flag for stratospheric water vapor physics
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[iaerclm]
  standard_name = flag_for_aerosol_input_MG_radiation
  long_name = flag for using aerosols in Morrison-Gettelman MP_radiation
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[iccn]
  standard_name = flag_for_in_ccn_forcing_for_morrison_gettelman_microphysics
  long_name = flag for IN and CCN forcing for morrison gettelman microphysics
  units = none
  dimensions = ()
  type = integer
  intent = in
  optional = F
[iflip]
  standard_name = flag_for_vertical_index_direction_control
  long_name = iflip - is not the same as flipv
  units = flag
  dimensions = ()
  type = integer
  intent = in
  optional = F
[idate]
  standard_name = date_and_time_at_model_initialization_reordered
  long_name = initial date with different size and ordering
  units = none
  dimensions = (4)
  type = integer
  intent = in
  optional = F
[nblks]
  standard_name = ccpp_block_count
  long_name = for explicit data blocking: number of blocks
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[blksz]
  standard_name = ccpp_block_sizes
  long_name = for explicit data blocking: block sizes of all blocks
  units = count
  dimensions = (ccpp_block_count)
  type = integer
  intent = in
  optional = F
[nx]
  standard_name = number_of_points_in_x_direction_for_this_MPI_rank
  long_name = number of points in x direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[ny]
  standard_name = number_of_points_in_y_direction_for_this_MPI_rank
  long_name = number of points in y direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[im]
  standard_name = horizontal_dimension
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[xlat_d]
  standard_name = latitude_in_degree
  long_name = latitude in degrees
  units = degree_north
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[xlon_d]
  standard_name = longitude_in_degree
  long_name = longitude in degrees
  units = degree_east
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[levh2o_int]
  standard_name = vertical_dimension_of_h2o_forcing_data
  long_name = number of vertical layers in h2o forcing data
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[levozp_int]
  standard_name = vertical_dimension_of_ozone_forcing_data
  long_name = number of vertical layers in ozone forcing data
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[ozpl]
  standard_name = ozone_forcing
  long_name = ozone forcing data
  units = various
  dimensions = (horizontal_dimension,vertical_dimension_of_ozone_forcing_data,number_of_coefficients_in_ozone_forcing_data)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[h2opl]
  standard_name = h2o_forcing
  long_name = water forcing data
  units = various
  dimensions = (horizontal_dimension,vertical_dimension_of_h2o_forcing_data,number_of_coefficients_in_h2o_forcing_data)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[aer_nm]
  standard_name = aerosol_number_concentration_from_gocart_aerosol_climatology
  long_name = GOCART aerosol climatology number concentration
  units = kg-1?
  dimensions = (horizontal_dimension,vertical_dimension,number_of_aerosol_tracers_MG)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[jindx1_o3]
  standard_name = lower_ozone_interpolation_index
  long_name = interpolation low index for ozone
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[jindx2_o3]
  standard_name = upper_ozone_interpolation_index
  long_name = interpolation high index for ozone
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[ddy_o3]
  standard_name = ozone_interpolation_weight
  long_name = interpolation high index for ozone
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[jindx1_h]
  standard_name = lower_water_vapor_interpolation_index
  long_name = interpolation low index for stratospheric water vapor
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[jindx2_h]
  standard_name = upper_water_vapor_interpolation_index
  long_name = interpolation high index for stratospheric water vapor
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[ddy_h]
  standard_name = water_vapor_interpolation_weight
  long_name = interpolation high index for stratospheric water vapor
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[jindx1_aer]
  standard_name = lower_aerosol_y_interpolation_index
  long_name = interpolation low index for prescribed aerosols in the y direction
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[jindx2_aer]
  standard_name = upper_aerosol_y_interpolation_index
  long_name = interpolation high index for prescribed aerosols in the y direction
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[ddy_aer]
  standard_name = aerosol_y_interpolation_weight
  long_name = interpolation high index for prescribed aerosols in the y direction
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[iindx1_aer]
  standard_name = lower_aerosol_x_interpolation_index
  long_name = interpolation low index for prescribed aerosols in the x direction
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[iindx2_aer]
  standard_name = upper_aerosol_x_interpolation_index
  long_name = interpolation high index for prescribed aerosols in the x direction
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[ddx_aer]
  standard_name = aerosol_x_interpolation_weight
  long_name = interpolation high index for prescribed aerosols in the x direction
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[jindx1_ci]
  standard_name = lower_cloud_nuclei_y_interpolation_index
  long_name = interpolation low index for ice and cloud condensation nuclei in the y direction
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[jindx2_ci]
  standard_name = upper_cloud_nuclei_y_interpolation_index
  long_name = interpolation high index for ice and cloud condensation nuclei in the y direction
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[ddy_ci]
  standard_name = cloud_nuclei_y_interpolation_weight
  long_name = interpolation high index for ice and cloud condensation nuclei in the y direction
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[iindx1_ci]
  standard_name = lower_cloud_nuclei_x_interpolation_index
  long_name = interpolation low index for ice and cloud condensation nuclei in the x direction
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[iindx2_ci]
  standard_name = upper_cloud_nuclei_x_interpolation_index
  long_name = interpolation high index for ice and cloud condensation nuclei in the x direction
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[ddx_ci]
  standard_name = cloud_nuclei_x_interpolation_weight
  long_name = interpolation high index for ice and cloud condensation nuclei in the x direction
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[oz_pres_int]
  standard_name = natural_log_of_ozone_forcing_data_pressure_levels
  long_name = natural log of ozone forcing data pressure levels
  units = log(Pa)
  dimensions = (vertical_dimension_of_ozone_forcing_data)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[h2o_pres_int]
  standard_name = natural_log_of_h2o_forcing_data_pressure_levels
  long_name = natural log of h2o forcing data pressure levels
  units = log(Pa)
  dimensions = (vertical_dimension_of_h2o_forcing_data)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[imap]
  standard_name = map_of_block_column_number_to_global_i_index
  long_name = map of local index ix to global index i for this block
  units = none
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[jmap]
  standard_name = map_of_block_column_number_to_global_j_index
  long_name = map of local index ix to global index j for this block
  units = none
  dimensions = (horizontal_dimension)
  type = integer
  intent = inout
  optional = F
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F

########################################################################
[ccpp-arg-table]
  name = GFS_phys_time_vary_finalize
  type = scheme
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F

########################################################################
[ccpp-arg-table]
  name = GFS_phys_time_vary_run
  type = scheme
[Grid]
  standard_name = GFS_grid_type_instance
  long_name = Fortran DDT containing FV3-GFS grid and interpolation related data
  units = DDT
  dimensions = ()
  type = GFS_grid_type
  intent = in
  optional = F
[Statein]
  standard_name = GFS_statein_type_instance
  long_name = instance of derived type GFS_statein_type
  units = DDT
  dimensions = ()
  type = GFS_statein_type
  intent = in
  optional = F
[Model]
  standard_name = GFS_control_type_instance
  long_name = Fortran DDT containing FV3-GFS model control parameters
  units = DDT
  dimensions = ()
  type = GFS_control_type
  intent = inout
  optional = F
[Tbd]
  standard_name = GFS_tbd_type_instance
  long_name = Fortran DDT containing FV3-GFS miscellaneous data
  units = DDT
  dimensions = ()
  type = GFS_tbd_type
  intent = inout
  optional = F
[Sfcprop]
  standard_name = GFS_sfcprop_type_instance
  long_name = Fortran DDT containing FV3-GFS surface fields
  units = DDT
  dimensions = ()
  type = GFS_sfcprop_type
  intent = inout
  optional = F
[Cldprop]
  standard_name = GFS_cldprop_type_instance
  long_name = Fortran DDT containing FV3-GFS cloud fields
  units = DDT
  dimensions = ()
  type = GFS_cldprop_type
  intent = inout
  optional = F
[Diag]
  standard_name = GFS_diag_type_instance
  long_name = Fortran DDT containing FV3-GFS fields targeted for diagnostic output
  units = DDT
  dimensions = ()
  type = GFS_diag_type
  intent = inout
  optional = F
[first_time_step]
  standard_name = flag_for_first_time_step
  long_name = flag for first time step for time integration loop (cold/warmstart)
  units = flag
  dimensions = ()
  type = logical
  intent = in
  optional = F
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F
