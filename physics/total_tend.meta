[ccpp-arg-table]
  name = total_tend_pre_init
  type = scheme

########################################################################
[ccpp-arg-table]
  name = total_tend_pre_finalize
  type = scheme

########################################################################
[ccpp-arg-table]
  name = total_tend_pre_run
  type = scheme
[dtp]
  standard_name = time_step_for_physics
  long_name = physics timestep
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F
[kdt]
  standard_name = index_of_time_step
  long_name = current forecast iteration
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[tgrs]
  standard_name = air_temperature
  long_name = model layer mean temperature
  units = K
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
[ugrs]
  standard_name = x_wind
  long_name = zonal wind
  units = m s-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
[vgrs]
  standard_name = y_wind
  long_name = meridional wind
  units = m s-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
[qvgrs]
  standard_name = water_vapor_specific_humidity
  long_name = water vapor specific humidity
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
[t_start]
  standard_name = temperature_at_start_of_ccpp
  long_name = temperature at start of ccpp
  units = K
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = out
[t_start]
  standard_name = temperature_at_total_check_point
  long_name = temperature when model total is calculated in ccpp
  units = K
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
[u_start]
  standard_name = x_wind_at_total_check_point
  long_name = x when model total is calculated in ccpp
  units = K
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
[v_start]
  standard_name = y_wind_at_total_check_point
  long_name = y when model total is calculated in ccpp
  units = K
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
[q_start]
  standard_name = water_vapor_specific_humidity_at_total_check_point
  long_name = water vapor specific humidity when model total is calculated in ccpp
  units = K
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
[dt3dt_total]
  standard_name = cumulative_change_in_temperature
  long_name = cumulative change in temperature
  units = K
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
[du3dt_total]
  standard_name = cumulative_change_in_x_wind
  long_name = cumulative change in x wind
  units = m s-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
[dv3dt_total]
  standard_name = cumulative_change_in_y_wind
  long_name = cumulative change in y wind
  units = m s-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
[dq3dt_total]
  standard_name = cumulative_change_in_water_vapor_specific_humidity
  long_name = cumulative change in water vapor specific humidity
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
[im]
  standard_name = horizontal_loop_extent
  long_name = horizontal loop extent
  units = count
  dimensions = ()
  type = integer
  intent = in
[levs]
  standard_name = vertical_dimension
  long_name = vertical layer dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
[ntrac]
  standard_name = number_of_tracers
  long_name = number of tracers
  units = count
  dimensions = ()
  type = integer
  intent = in
[lssav]
  standard_name = flag_diagnostics
  long_name = logical flag for storing diagnostics
  units = flag
  dimensions = ()
  type = logical
  intent = in
[ldiag3d]
  standard_name = flag_diagnostics_3D
  long_name = flag for 3d diagnostic fields
  units = flag
  dimensions = ()
  type = logical
  intent = in
[qdiag3d]
  standard_name = flag_tracer_diagnostics_3D
  long_name = flag for 3d tracer diagnostic fields
  units = flag
  dimensions = ()
  type = logical
  intent = in
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
