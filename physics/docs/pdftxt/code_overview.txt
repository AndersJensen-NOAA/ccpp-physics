/**
\page subpage_overview Overview of the Code

In the CCPP v2 code, each parameterization is placed its own Modern Fortran module, which facilitates model development and
code maintenance. While some individual parameterization can be invoked for GMTB SCM tests, most users will assemble the 
parameterizations in suites. The parameterizations contains in CCPP-physics v2 can be used to run two suites: FV3GFS default
(with GFDL cloud microphysics) and FV3GFS with Zhao-Carr microphysics. 

The FV3GFS physics suite uses the parameterizations in the following order, as defined in  \c suite_GFS_operational_2017_scm.xml file:
 + @ref GFS_RRTMG
 + @ref GFS_SFCLYR
 + @ref GFS_NSST
 + @ref GFS_NOAH
 + @ref GFS_SFCSICE
 + @ref GFS_HEDMF
 + @ref GFS_GWDPS
 + @ref GFS_RAYLEIGH
 + @ref GFS_OZPHYS
 + @ref GFS_SAMFdeep
 + @ref GFS_GWDC
 + @ref GFS_SAMFshal
 + Microphysics (MP) scheme option:
   + @ref GFDL_cloud 
   + @ref GFS_ZHAOC

The parameterizations included in the CCPP-physics v2 are all column-based, that is, computations are performed only in the vertical.
The input information for the physics consists of the values of the gridbox mean prognostic variables (wind components, temperature,
specific humidity, cloud fraction, vater contents for cloud liquid, cloud ice, rain, snow, graupel, and ozone concentration), the provisional
 dynamical tendencies for the same variables and various surface fields, both fixed and variable.

The time integration of the GFS physics suite is based on the following:
- The tendencies from the different physical processes are computed by the parameterizations or derived in separate interstitial routines; 
- The value of the relevant prognostic variable is updated with the tendency from each process, and the next parameterization starts from this updated
value, in what is usually refered to as the sequential splitting method (Beljaars(1991) \cite beljaars_1991).

In addition to the physical schemes themselves, this scientific documentation also covers four modules that define physics attributes and constants:
 + @ref func_phys
 + @ref phy_sparam
 + @ref physcons
 + @ref radcons

*/
