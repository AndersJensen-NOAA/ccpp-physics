name: CI test to run SCM ccpp_prebuild script

on: [push, pull_request]

jobs:
  build-linux:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:

    - name: Checkout current ccpp-physics code
      uses: actions/checkout@v2

    - name: Get remote-URL for current ccpp-physics code
      run: echo "GIT_REMOTE_URL=`git remote get-url origin`" >> $GITHUB_ENV

    - name: Get branch name for current ccpp-physics code
      run: echo "GIT_REMOTE_BRANCH=`git rev-parse --abbrev-ref HEAD`" >> $GITHUB_ENV

    - name: Get hash for HEAD of current ccpp-physics code
      run: echo	"GIT_REMOTE_HASH=`git rev-parse HEAD`" >> $GITHUB_ENV

    - name: Checkout latest ccpp-scm code
      run: |
        git clone https://github.com/NCAR/ccpp-scm.git
        pwd

    - name: Test GIT_REMOTE_URL
      run: echo $GIT_REMOTE_URL
    - name: Test GIT_REMOTE_BRANCH
      run: echo $GIT_REMOTE_BRANCH
    - name: Test GIT_REMOTE_HASH
      run: echo	$GIT_REMOTE_HASH

    - name: Initialize submodules
      run: |
        cd /home/runner/work/ccpp-physics/ccpp-physics/ccpp-scm
        git submodule update --init --recursive

    - name: Update ccpp-physics hash in ccpp-scm
      run: |
        cd /home/runner/work/ccpp-physics/ccpp-physics/ccpp-scm/ccpp/physics
        git remote add remote_local $GIT_REMOTE_URL
        git fetch remote_local $GIT_REMOTE_BRANCH
        git checkout remote_local/$GIT_REMOTE_BRANCH
    
    - name: Set up Python 3.8.5
      uses: actions/setup-python@v3
      with:
        python-version: 3.8.5

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH

    - name: Run ccpp_prebuild.py
      run: |
        cd /home/runner/work/ccpp-physics/ccpp-physics/ccpp-scm/
        git status
        ls
        mkdir -p /home/runner/work/ccpp-physics/ccpp-physics/ccpp-scm/scm/bin/ccpp/physics/physics/
        ./ccpp/framework/scripts/ccpp_prebuild.py --config ccpp/config/ccpp_prebuild_config.py